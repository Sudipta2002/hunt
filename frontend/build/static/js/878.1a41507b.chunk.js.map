{"version":3,"file":"static/js/878.1a41507b.chunk.js","mappings":"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","sources":["Components/ScoreCard/Card.jsx","Components/AdminDashboard/Dash.jsx","Components/Game/Game.jsx"],"sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\nconst Card = ({ind,name,score}) => {\r\n  // {console.log(name)};\r\n  return (\r\n    <div className='card'>\r\n      <div><h4>{ind+1}</h4></div>\r\n      <div><h4>{name}</h4></div>\r\n      <div><h4>{score}</h4></div>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useEffect, useState } from 'react'\r\nimport './Dash.css';\r\nimport Card from '../ScoreCard/Card.jsx';\r\n// import {data} from '../../data';\r\nimport axios from 'axios';\r\nconst Dash = () => {\r\n    const [dummy, setdummy] = useState([]);\r\n    const [data,setData]=useState([]);\r\n    const getData=  async() =>{\r\n        try {\r\n            const datas =await axios.get('http://localhost:5000/api/v1/dash');\r\n            console.log(datas.data.data);\r\n            setData(datas.data.data);\r\n            // setData(datas.data.data);\r\n            setdummy(soort(datas.data.data)); \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    function soort(dataa){\r\n        return dataa.sort((a,b)=>{\r\n            if(a.score===b.score){\r\n                return b.score-a.score;\r\n            }else{\r\n                return b.score-a.score;\r\n            }\r\n        })\r\n    }\r\n    useEffect( () => {\r\n        getData();\r\n    }, [])  \r\n\r\n  return (\r\n    <div className='container'>\r\n        <div className='header'>LeaderBoard</div>\r\n          <div className='card-head'>\r\n            <div><h4>RANK</h4></div>\r\n            <div><h4>Name</h4></div>\r\n            <div><h4>Score</h4></div>   \r\n        </div>\r\n        <div className='CardSection'> \r\n            {\r\n                dummy && dummy.map((e,i)=>{\r\n                    return <Card ind={i} name={e.username} score={e.score}/>\r\n                })\r\n            }\r\n        </div>          \r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Dash","import React, { useEffect, useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport  './Game.css';\r\nimport axios from 'axios';\r\nimport {UserState} from '../../Context/UserProvider'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Dash from '../AdminDashboard/Dash';\r\nfunction Game() {\r\n  const [clues, setClues] = useState([\r\n    { clue: \"I am where the wind blows and the grass grows\", answer: \"https://images.unsplash.com/photo-1504280645497-00afe6a47e43?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8ZmllbGR8ZW58MHx8MHx8&w=1000&q=80\" },\r\n    { clue: \"I am where the sun sets and the stars come out\", answer: \"https://i.pinimg.com/originals/94/81/aa/9481aa84d9446fd65a074a0341cbdbf2.jpg\" },\r\n    { clue: \"I am where the water flows and the fish swim\", answer: \"https://c0.wallpaperflare.com/preview/479/162/458/leh-indus-river-indus-valley.jpg\" },\r\n    { clue: \"I am where the fire burns and the smoke rises\", answer: \"https://media.gettyimages.com/id/172417303/photo/smoke-stacks-on-the-tiled-roof.jpg?s=612x612&w=gi&k=20&c=_LP6LIpztMGYl5LmC_bFKJy_ENcAXJjBGIJh26gVOZ0=\" },\r\n    { clue: `You found the treasure!`, answer: \"\" },\r\n  ]);\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  // const [isAdmin, setisAdmin]= useState(false);\r\n  const [treasureFound, setTreasureFound] = useState(false);\r\n  const {user,score,start, setStart,isAdmin, setisAdmin, setScore,currentClueIndex, setCurrentClueIndex}=UserState();\r\n  const navigate = useNavigate();\r\n  const handleInput = async() => {\r\n    \r\n    if (treasureFound) {\r\n        return;\r\n      }\r\n    if (inputValue === clues[currentClueIndex].answer) {\r\n        setMessage('');\r\n        const newScore = score + 5;\r\n        setScore(newScore);\r\n        setMessage('Score is '+ newScore);\r\n        // setStage(stage+1);\r\n        const newIndex = currentClueIndex + 1;\r\n        // console.log(typeof(currentClueIndex));\r\n        if (newIndex === clues.length-1) { \r\n            console.log(newIndex);\r\n            setCurrentClueIndex(currentClueIndex + 1);\r\n            setTreasureFound(true);\r\n            const nscore=score+5;\r\n            setMessage('Final Score is '+ nscore);\r\n            try {\r\n              console.log(nscore,user.username,user.id);\r\n              const {data}= await axios.post('http://localhost:5000/api/v1/score',{score:nscore,username:user.username,userId:user.id});\r\n              console.log(data);\r\n            } catch (error) {\r\n              console.log(error);\r\n            }   \r\n        } else { \r\n            setCurrentClueIndex(newIndex);\r\n        }\r\n        setInputValue('');\r\n    } else {\r\n        setMessage('Wrong answer, try again!');\r\n        const newScore = score - 2; \r\n        setScore(newScore);     \r\n        setInputValue('');\r\n    }\r\n  };\r\n  const handleClick = (e) => {\r\n    setInputValue(e.target.getAttribute(\"src\"));\r\n  };\r\n  useEffect(() => {\r\n    inputValue && handleInput();\r\n  }, [inputValue]);\r\n  // console.log(typeof(user.username));\r\n  \r\n  // console.log(user.username);\r\n  const [divContent, setDivContent] = useState([\r\n    'https://images.unsplash.com/photo-1504280645497-00afe6a47e43?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8ZmllbGR8ZW58MHx8MHx8&w=1000&q=80',\r\n    'https://i.pinimg.com/originals/94/81/aa/9481aa84d9446fd65a074a0341cbdbf2.jpg',\r\n    'https://c0.wallpaperflare.com/preview/479/162/458/leh-indus-river-indus-valley.jpg',\r\n    'https://media.gettyimages.com/id/172417303/photo/smoke-stacks-on-the-tiled-roof.jpg?s=612x612&w=gi&k=20&c=_LP6LIpztMGYl5LmC_bFKJy_ENcAXJjBGIJh26gVOZ0=',\r\n  ]);\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n  const shuffledContent = shuffleArray(divContent);\r\n  const handleSubmit= async ()=>{\r\n    setStart(true);window.location.reload();\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {isAdmin===true ?( <Dash/>) \r\n    :( \r\n      <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\r\n      \r\n        {!treasureFound ? (\r\n          <div style={{ margin: \"20px\" }}>\r\n              <div className='clue'>     \r\n                  <p>{\r\n                  //console.log(currentClueIndex)\r\n                  clues[currentClueIndex].clue\r\n                  }</p>\r\n              </div>\r\n            <div className='container-2'>\r\n          \r\n              {shuffledContent.map((content, index) => (\r\n              <div key={index} className='opt1' onClick={handleClick}>\r\n                  <img className='img' src={content}></img>\r\n              </div>\r\n              ))\r\n          }\r\n            </div> \r\n            <p style={{color: \"red\"}}>{message}</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <p style={{ fontSize: \"24px\" }}>{message}</p>\r\n            <Button onClick={handleSubmit} variant='contained'>Start Again</Button>\r\n          </>\r\n        )}\r\n      </div> )\r\n      }\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"],"names":["_ref","ind","name","score","_jsxs","className","children","_jsx","_useState","useState","_useState2","_slicedToArray","dummy","setdummy","_useState3","_useState4","setData","getData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","datas","wrap","_context","prev","next","axios","sent","console","log","data","sort","a","b","t0","stop","apply","arguments","useEffect","map","e","i","Card","username","clue","answer","clues","inputValue","setInputValue","_useState5","_useState6","message","setMessage","_useState7","_useState8","treasureFound","setTreasureFound","_UserState","UserState","user","setStart","start","isAdmin","setScore","setisAdmin","currentClueIndex","setCurrentClueIndex","handleInput","useNavigate","newScore","newIndex","nscore","_yield$axios$post","abrupt","length","id","userId","handleClick","target","getAttribute","_useState9","_useState10","divContent","shuffledContent","array","j","Math","floor","random","_ref2","shuffleArray","handleSubmit","_ref3","_callee2","_context2","window","location","reload","_Fragment","Dash","style","textAlign","fontFamily","fontSize","Button","onClick","variant","margin","content","index","src","color"],"sourceRoot":""}